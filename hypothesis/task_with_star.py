# Практичское задание the star
# Шибаева Мария Дмитриевна|  ИВТ | 2 курс | 1 подгруппа
# Задание со звездочкой
#
# ЧАСТЬ 1
#
# Есть два списка разной длины. В первом содержатся ключи, а во втором значения.
# Напишите функцию, которая создаёт из этих ключей и значений словарь.
# Если ключу не хватило значения, в словаре должно быть значение None.
# Значения, которым не хватило ключей, нужно игнорировать.
#
# Напишите с использованием пакета Py.test и модуля hypothesis тесты,
# которые проверяли бы работу этой программы.
#
# Для проверки с помощью гипотез вам потребуется использовать стратегии (strategies).
# Примеры их использования смотри в официальной документации: https://hypothesis.readthedocs.io/

def dic(keys, value):
    """

    Функция, создаёт словарь из ключей и значений из списков разной длины.
    Если ключу не хватило значения, то значение будет None.
    Значения, которым не хватило ключей будут игноририроваться.
    """

    dictionary = dict.fromkeys(keys, None)

    for i, k in enumerate(keys):
        if i < len(value):
            dictionary.update({k: value[i]})
        else:
            break

    return dictionary


print('\n', dic([1, 2, 3, 4, 5], ['h', 'e', 'l', 'l', 'o']))  # {1:'h', 2:'e', 3:'l', 4:'l', 6:'o'}
print('\n', dic(['M', 'a', 'y'], ['J', 'u', 'n', 'e']))  # {'M':'J', 'a':'u', 'y':'n'}

# ПРОВЕРКА
assert (dic([], []) == {})
assert (dic([0, 1], []) == {0: None, 1: None})
assert (dic([], [1, 2]) == {})
assert (dic([3, 4, 5], ['a', 'b', ]) == {3: 'a', 4: 'b', 5: None})
assert (dic([6, 7], ['c', 'd', 'e']) == {6: 'c', 7: 'd'})
assert (dic([8], ['Maria']) == {8: 'Maria'})
